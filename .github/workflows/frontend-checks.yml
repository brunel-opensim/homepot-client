name: Frontend Checks

on:
  push:
    branches: [ main, develop, feature/** ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-checks.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-checks.yml'

jobs:
  frontend-quality:
    name: Frontend Quality Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: false

      - name: Build production bundle
        run: npm run build
        env:
          VITE_API_BASE_URL: http://localhost:8000

      - name: Check bundle size
        run: |
          echo "Build output size:"
          du -sh dist/
          echo "Detailed breakdown:"
          du -h dist/* | sort -h

      - name: Run tests (when available)
        run: npm run test -- --run
        continue-on-error: true  # Don't fail if no tests yet

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '22.x'
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 7

  dependency-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for outdated packages
        run: npm outdated || true

  frontend-status:
    name: Frontend Status Check
    runs-on: ubuntu-latest
    needs: [frontend-quality, dependency-audit]
    if: always()
    
    steps:
      - name: Check job results
        run: |
          if [[ "${{ needs.frontend-quality.result }}" == "failure" ]]; then
            echo "Frontend quality checks failed"
            exit 1
          elif [[ "${{ needs.frontend-quality.result }}" == "success" ]]; then
            echo "Frontend quality checks passed"
          fi
          
          if [[ "${{ needs.dependency-audit.result }}" == "failure" ]]; then
            echo "Security audit found issues"
          else
            echo "Security audit passed"
          fi
